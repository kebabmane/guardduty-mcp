[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "guardduty-agent"
version = "1.0.0"
description = "AWS GuardDuty MCP server for secure GuardDuty API access"
authors = [{name = "GuardDuty MCP Server", email = "mcp@example.com"}]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.9"
keywords = ["aws", "guardduty", "security", "mcp", "server"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "boto3>=1.34.0",
    "mcp>=1.0.0",
    "python-dotenv>=1.0.0",
    "pydantic>=2.0.0",
    "rich>=13.0.0",
    "typer>=0.12.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
]

[project.scripts]
guardduty-agent = "guardduty_agent.cli:main"

[project.urls]
Homepage = "https://github.com/your-org/guardduty-agent"
Repository = "https://github.com/your-org/guardduty-agent"
Issues = "https://github.com/your-org/guardduty-agent/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["guardduty_agent*"]

[tool.black]
line-length = 88
target-version = ['py39']

[tool.ruff]
target-version = "py39"
line-length = 88
select = ["E", "F", "W", "I", "N", "UP", "B", "A", "C4", "PIE", "T20"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"